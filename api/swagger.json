{
    "openapi": "3.0.3",
    "info": {
      "title": "Swagger NodeJS Learning - OpenAPI 3.0",
      "description": "This is a sample NodeJS Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the NodeJS learning, we've switched to the design first approach!",
      "version": "1.0.11"
    },
    "servers": [
      {
        "url": "http://localhost:3000/api"
      }
    ],
    "tags": [
      {
        "name": "user",
        "description": "Operations about user"
      }
    ],
    "paths": {
      "/user": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "List of users",
          "operationId": "listUser",
          "responses": {
            "default": {
              "description": "List of users",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Create user",
          "description": "This can only be done by the logged in user.",
          "operationId": "createUser",
          "requestBody": {
            "description": "Created user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "default": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "/user/{id}": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Find user by ID",
          "description": "Return a single user",
          "operationId": "getUserId",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user to return",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": 10
            },
            "name": {
              "type": "string",
              "example": "Jhon"
            },
            "last_name": {
              "type": "string",
              "example": "Doe"
            }
          }
        },
        "ApiResponse": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "xml": {
            "name": "##default"
          }
        }
      },
      "requestBodies": {
        "UserArray": {
          "description": "List of user object",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "securitySchemes": {
        "petstore_auth": {
          "type": "oauth2",
          "flows": {
            "implicit": {
              "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
              "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
              }
            }
          }
        },
        "api_key": {
          "type": "apiKey",
          "name": "api_key",
          "in": "header"
        }
      }
    }
  }